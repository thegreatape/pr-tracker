#!/usr/bin/env ruby

lib = File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'nokogiri'
require 'date'
require 'active_support/all'

def scrub(line)
  line.gsub(/(Supersetted with:|T\d|\(rep pr\))\s*/i, '')
end

def parse_main(line)
  parts = scrub(line).split(/\s*\- |\: /)
  if parts.length < 2
    parts = [
      scrub(line).split(/\s+/).reverse.drop(1).reverse.join(" "),
      scrub(line).split(/\s+/).last
    ]
  end

  sets = parts[1].split(", ").map do |s|
    if s.include?("/")
      reps, weight = s.split("x")
      reps.split("/").map {|r|"#{weight.squish} x #{r}"}.join("\n")
    else
      s.squish.split("x").reverse.join(" x ")
    end
  end

  "##{parts[0]}\n#{sets.join("\n")}\n\n"
end

def parse_accessories(line)
  scrub(line).split(/,\s*/).map {|s| "##{s}"}.join("\n")
end

nope = File.open('nope.txt', 'w')
doc = Nokogiri::HTML(File.read(ARGV[0]))
doc.css(".entry").each do |entry|
  date = Date.parse(entry.css("time")[0]['datetime'])
  raw_content = entry.css(".usertext-body").map(&:content)
  lists = entry.css(".usertext-body ul")
  if lists.any?
    content = []
    lists.css('li').each do |li|
      next if li.content.include?('e1RM')
      next if li.content =~ /\.|\?|'/

      if li.content =~ /\d+\s*x\s*\d+/
        content << parse_main(li.content)
      elsif li.content.include?(",")
        content << parse_accessories(li.content)
      else
        #puts " XXX XXX #{li.content}"
      end
    end

    if content.any?
      year, month, day = date.to_s.split('-')
      FileUtils.mkdir_p "#{ARGV[1]}/#{year}/#{month}"
      File.open("#{ARGV[1]}/#{date.to_s.gsub('-', '/')}.workout", "w") do |f|
        f.puts content.join("\n")
      end
    end

    #puts raw_content
  else
    nope.puts "\n========== #{date} ===========\n\n"
    nope.puts date
    nope.puts raw_content
  end
end
nope.close
